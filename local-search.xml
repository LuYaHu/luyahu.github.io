<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>后端开发文档</title>
    <link href="/2022/04/13/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/"/>
    <url>/2022/04/13/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="后端目前进度"><a href="#后端目前进度" class="headerlink" title="后端目前进度"></a>后端目前进度</h1><h2 id="后端数据库开发"><a href="#后端数据库开发" class="headerlink" title="后端数据库开发"></a>后端数据库开发</h2><p>目前已开发完成数据库的基础框架<br>总共分为三个部分<br>Django框架为四个部分，分别为takeout_01主框架，其他分为三个APP</p><h3 id="第一个是product-APP"><a href="#第一个是product-APP" class="headerlink" title="第一个是product APP"></a>第一个是product APP</h3><p>里面数据库内包含的信息为产品的信息</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> xmlrpc.client <span class="hljs-keyword">import</span> Boolean<br><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><span class="hljs-comment"># Create your models here.</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Product</span>(models.Model):<br>    product_name = models.CharField(<span class="hljs-string">&quot;产品名&quot;</span>,max_length=<span class="hljs-number">50</span>,default=<span class="hljs-string">&#x27;&#x27;</span>,unique=<span class="hljs-literal">True</span>);<br>    price = models.DecimalField(<span class="hljs-string">&quot;定价&quot;</span>,max_digits=<span class="hljs-number">7</span>,decimal_places=<span class="hljs-number">2</span>,default=<span class="hljs-number">0.0</span>)<br>    market_price = models.DecimalField(<span class="hljs-string">&quot;零售价&quot;</span>,max_digits=<span class="hljs-number">7</span>,decimal_places=<span class="hljs-number">2</span>,default=<span class="hljs-number">0.0</span>)<br>    is_active = models.BooleanField(<span class="hljs-string">&quot;是否在售&quot;</span>,default=<span class="hljs-literal">True</span>)<br>    saler_id = models.IntegerField(<span class="hljs-string">&quot;商家ID&quot;</span>,default=<span class="hljs-number">1</span>)<br>    sort = models.CharField(<span class="hljs-string">&quot;产品分类&quot;</span>,max_length=<span class="hljs-number">50</span>,default=<span class="hljs-string">&quot;&quot;</span>)<br>    describation = models.TextField(<span class="hljs-string">&quot;描述&quot;</span>,max_length = <span class="hljs-number">288</span>,default=<span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:<br>        db_table = <span class="hljs-string">&#x27;product&#x27;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__str__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;name is %s price is %s market_price is %s&#x27;</span>%(self.name,self.price,self.market_price)<br>            <br></code></pre></td></tr></table></figure><h3 id="第二个是shopping-APP"><a href="#第二个是shopping-APP" class="headerlink" title="第二个是shopping APP"></a>第二个是shopping APP</h3><p>里面数据库内包含的信息为当前购物产品的信息<br>具体描述如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><span class="hljs-comment"># Create your models here.</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">UserAddressInfo</span>(models.Model):<br>    province = models.CharField(<span class="hljs-string">&quot;省份&quot;</span>,max_length=<span class="hljs-number">50</span>,default=<span class="hljs-string">&quot;浙江&quot;</span>)<br>    city = models.CharField(<span class="hljs-string">&quot;城市&quot;</span>,max_length=<span class="hljs-number">50</span>,default=<span class="hljs-string">&quot;杭州&quot;</span>)<br>    address = models.CharField(<span class="hljs-string">&quot;地址&quot;</span>,max_length=<span class="hljs-number">100</span>,default=<span class="hljs-string">&quot;浙江工商大学&quot;</span>)<br>    date = models.DateField(auto_now_add = <span class="hljs-literal">True</span>)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Book_Info</span>(models.Model):<br>    remark = models.CharField(<span class="hljs-string">&quot;评论&quot;</span>,max_length=<span class="hljs-number">100</span>)<br>    sale = models.DecimalField(<span class="hljs-string">&quot;售价&quot;</span>,max_digits=<span class="hljs-number">11</span>,decimal_places=<span class="hljs-number">2</span>,default=<span class="hljs-string">&#x27;&#x27;</span>)<br>    address = models.CharField(<span class="hljs-string">&quot;地址&quot;</span>,max_length=<span class="hljs-number">50</span>)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">shopping_cart</span>(models.Model):<br>    product_name = models.CharField(<span class="hljs-string">&quot;外卖名字&quot;</span>,max_length=<span class="hljs-number">50</span>,default=<span class="hljs-string">&#x27;&#x27;</span>)<br>    delivery_info = models.BooleanField(<span class="hljs-string">&quot;是否到达&quot;</span>,default=<span class="hljs-literal">False</span>)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Info_deliver</span>(models.Model):<br>    advertise = models.TextField(<span class="hljs-string">&quot;推荐广告&quot;</span>,max_length=<span class="hljs-number">200</span>,default=<span class="hljs-string">&#x27;&#x27;</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">GetAddress</span>(models.Model):<br>    address = models.CharField(<span class="hljs-string">&quot;地址&quot;</span>,max_length=<span class="hljs-number">50</span>,default=<span class="hljs-string">&#x27;&#x27;</span>)<br>    phone_number = models.CharField(<span class="hljs-string">&quot;买家电话号码&quot;</span>,max_length=<span class="hljs-number">11</span>,default=<span class="hljs-string">&#x27;&#x27;</span>)<br>    name = models.CharField(<span class="hljs-string">&quot;买家名字&quot;</span>,max_length=<span class="hljs-number">20</span>,default=<span class="hljs-string">&#x27;&#x27;</span>) <br></code></pre></td></tr></table></figure><h3 id="第三个是user-APP"><a href="#第三个是user-APP" class="headerlink" title="第三个是user APP"></a>第三个是user APP</h3><p>里面数据库内包含的信息为用户的信息<br>具体描述如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><span class="hljs-comment"># Create your models here.</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">UserInfo</span>(models.Model):<br>    <span class="hljs-comment"># CharField类型不能为空,最少要指定一个长度</span><br>    <span class="hljs-comment">#DecimialField表示浮点型数，max_digits表示小数点前最大位数，decimal_places表示小数点后最多位数，并且必须指派一个默认值</span><br>    user_name = models.CharField(max_length=<span class="hljs-number">32</span>,default=<span class="hljs-string">&#x27;&#x27;</span>)<br>    email = models.EmailField(max_length=<span class="hljs-number">32</span>)<br>    pwd = models.CharField(max_length=<span class="hljs-number">32</span>,default=<span class="hljs-string">&#x27;&#x27;</span>)<br>    phone = models.IntegerField(default=<span class="hljs-number">0</span>)<br>    nickname = models.CharField(max_length=<span class="hljs-number">20</span>,default=<span class="hljs-string">&#x27;&#x27;</span>)<br><br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:<br>        db_table = <span class="hljs-string">&#x27;userinfo&#x27;</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__str__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;user_name is %s email is %s phone is %f&#x27;</span>%(self.user_name,self.email,self.phone)<br></code></pre></td></tr></table></figure><h2 id="后端调试"><a href="#后端调试" class="headerlink" title="后端调试"></a>后端调试</h2><p>目前已在view模块实现get和post请求<br>通过postman成功调试了get和post请求，并成功返回了数据<br>计划在接下来与前端进行接口上的测试<br>目前已写好以下几个接口的调通</p><h3 id="Product-App中的views"><a href="#Product-App中的views" class="headerlink" title="Product App中的views"></a>Product App中的views</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python"><br>m django.shortcuts <span class="hljs-keyword">import</span> render<br><span class="hljs-keyword">from</span> django.http <span class="hljs-keyword">import</span> HttpResponse,HttpResponseRedirect<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">update_useraddress</span>(<span class="hljs-params">request, user_address_id</span>):<br>    <span class="hljs-keyword">try</span>:<br>        user_address = UserAddressInfo.objects.get(<span class="hljs-built_in">id</span> = user_address_id, is_active = <span class="hljs-literal">True</span> )<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;--update useraddress is %s&#x27;</span>%(e))<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;--The user_address is not existed&#x27;</span>)<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>        <span class="hljs-keyword">pass</span><span class="hljs-comment">#暂时先这样,待会修改</span><br>    <span class="hljs-keyword">elif</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        province = request.POST[<span class="hljs-string">&#x27;province&#x27;</span>]<br>        city = request.POST[<span class="hljs-string">&#x27;city&#x27;</span>]<br>        address = request.POST[<span class="hljs-string">&#x27;address&#x27;</span>]<br>        <span class="hljs-built_in">print</span>(province,city,address)<br>        user_address.province = request.POST[<span class="hljs-string">&#x27;province&#x27;</span>]<br>        user_address.city= request.POST[<span class="hljs-string">&#x27;city&#x27;</span>]<br>        user_address.address= request.POST[<span class="hljs-string">&#x27;address&#x27;</span>]<br>        user_address.save()<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;改变成功&quot;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete_useraddress</span>(<span class="hljs-params">request</span>):<br>    user_address_id = request.GET.get(<span class="hljs-string">&#x27;user_address_id&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> user_address_id:<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;请求异常&quot;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        user_address= user_address.objects.get(<span class="hljs-built_in">id</span>=user_address_id,is_active=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;----delete book get error is %s&#x27;</span>%(e))<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;---The book id is error&#x27;</span>)<br>    user_address.is_active=<span class="hljs-literal">False</span><br>    user_address.save()<br>    <span class="hljs-comment">#暂时先这样</span><br>    <span class="hljs-keyword">pass</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">update_book</span>(<span class="hljs-params">request, book_id</span>):<br>    <span class="hljs-keyword">try</span>:<br>        book = Book_Info.objects.get(<span class="hljs-built_in">id</span> = book_id, is_active = <span class="hljs-literal">True</span> )<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;--update useraddress is %s&#x27;</span>%(e))<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;--The book is not existed&#x27;</span>)<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>        <span class="hljs-keyword">pass</span><span class="hljs-comment">#暂时先这样,待会修改</span><br>    <span class="hljs-keyword">elif</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        remark = request.POST[<span class="hljs-string">&#x27;remark&#x27;</span>]<br>        sale = request.POST[<span class="hljs-string">&#x27;sale&#x27;</span>]<br>        address = request.POST[<span class="hljs-string">&#x27;address&#x27;</span>]<br>        <span class="hljs-built_in">print</span>(remark,sale,address)<br>        book.remark = request.POST[<span class="hljs-string">&#x27;remark&#x27;</span>]<br>        book.sale= request.POST[<span class="hljs-string">&#x27;sale&#x27;</span>]<br>        book.address= request.POST[<span class="hljs-string">&#x27;address&#x27;</span>]<br>        book.save()<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;改变成功&quot;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete_book</span>(<span class="hljs-params">request</span>):<br>    book_id = request.GET.get(<span class="hljs-string">&#x27;book_id&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> book_id:<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;请求异常&quot;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        book= Book_Info.objects.get(<span class="hljs-built_in">id</span>=book_id,is_active=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;----delete book get error is %s&#x27;</span>%(e))<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;---The book id is error&#x27;</span>)<br>    book.is_active=<span class="hljs-literal">False</span><br>    book.save()<br>    <span class="hljs-comment">#暂时先这样</span><br></code></pre></td></tr></table></figure><h3 id="shopping中的APP"><a href="#shopping中的APP" class="headerlink" title="shopping中的APP"></a>shopping中的APP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python">            <br><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render<br><span class="hljs-keyword">from</span> django.http <span class="hljs-keyword">import</span> HttpResponse,HttpResponseRedirect<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Product<br><br><span class="hljs-comment"># Create your views here.</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">all_product</span>(<span class="hljs-params">request</span>):<br><br>    all_product= Product.objects.<span class="hljs-built_in">filter</span>(is_active=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">return</span> render(request,<span class="hljs-string">&#x27;product/all_product.html&#x27;</span>,<span class="hljs-built_in">locals</span>())<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">update_product</span>(<span class="hljs-params">request,product_id</span>):<br>    <span class="hljs-keyword">try</span>:<br>        product =  Product.objects.get(<span class="hljs-built_in">id</span>=product_id,is_active=<span class="hljs-literal">True</span>);<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;--update product error is %s&#x27;</span>%(e))<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;--The product is not existed&#x27;</span>)<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>        <span class="hljs-keyword">pass</span><br>        <span class="hljs-comment">#暂时先这样</span><br>    <span class="hljs-keyword">elif</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        price = request.POST[<span class="hljs-string">&#x27;price&#x27;</span>]<br>        <span class="hljs-built_in">print</span>(price)<br>        market_price = request.POST[<span class="hljs-string">&#x27;price&#x27;</span>]<br>        <span class="hljs-built_in">print</span>(market_price)<br>        product.price = price<br>        product.market_price = market_price<br>        product.save()<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;change successfully&#x27;</span>) <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete_product</span>(<span class="hljs-params">request</span>):<br>    product_id = request.GET.get(<span class="hljs-string">&#x27;product_id&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> product_id:<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;请求异常&quot;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        product= Product.objects.get(<span class="hljs-built_in">id</span>=product_id,is_active=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;----delete book get error is %s&#x27;</span>%(e))<br>        <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;---The book id is error&#x27;</span>)<br>    product.is_active=<span class="hljs-literal">False</span><br>    product.save()<br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><h2 id="这是调试成功的界面，当然，这会演示出来"><a href="#这是调试成功的界面，当然，这会演示出来" class="headerlink" title="这是调试成功的界面，当然，这会演示出来"></a>这是调试成功的界面，当然，这会演示出来</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Django ORM操作</title>
    <link href="/2022/04/08/Django-ORM%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/04/08/Django-ORM%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="创建APP"><a href="#创建APP" class="headerlink" title="创建APP"></a>创建APP</h2><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs python">python3 manage.py startapp app<br></code></pre></td></tr></table></figure><h1 id="注册app"><a href="#注册app" class="headerlink" title="注册app"></a>注册app</h1><p>首先得在INSTALLED_APP中注册App</p><h2 id="然后在models里面先进行操作"><a href="#然后在models里面先进行操作" class="headerlink" title="然后在models里面先进行操作"></a>然后在models里面先进行操作</h2><p>创建好models后首先</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">python3 manage.py makemigrations<br>python3 manage.py migrate<br></code></pre></td></tr></table></figure><h2 id="models-Demical"><a href="#models-Demical" class="headerlink" title="models.Demical"></a>models.Demical</h2><p>使用 Decimal 实例表示固定精度的十进制数的字段。它有两个必须的参数：</p><p>max_digits：数字允许的最大位数</p><p>decimal_places：小数的最大位数</p><p>例如，要存储的数字最大长度为3位，而带有两个小数位，可以使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">models.DecimalField( max_digits=<span class="hljs-number">3</span>, decimal_places=<span class="hljs-number">2</span>,...)<br></code></pre></td></tr></table></figure><h2 id="models-IntegerField"><a href="#models-IntegerField" class="headerlink" title="models.IntegerField"></a>models.IntegerField</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">models.IntegerField(<span class="hljs-string">&#x27;年龄&#x27;</span>, default=<span class="hljs-number">1</span>)<span class="hljs-comment">#前面的str字符串为数据库做识别用，而一定要赋初始值default给这个参数</span><br></code></pre></td></tr></table></figure><h2 id="models-BookeanField"><a href="#models-BookeanField" class="headerlink" title="models.BookeanField"></a>models.BookeanField</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">models.BookeanField(default=<span class="hljs-literal">True</span>)<span class="hljs-comment">#数据库初始化时最好赋值,比如赋值True</span><br></code></pre></td></tr></table></figure><h2 id="class-Meta"><a href="#class-Meta" class="headerlink" title="class Meta"></a>class Meta</h2><p>该类是在模型类里面的，db_table参数是用来修改数据库名字的</p><h1 id="Python-shell添加数据语句"><a href="#Python-shell添加数据语句" class="headerlink" title="Python shell添加数据语句"></a>Python shell添加数据语句</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>操作系统的调度算法</title>
    <link href="/2022/04/04/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/"/>
    <url>/2022/04/04/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="NND是真的难啊我操"><a href="#NND是真的难啊我操" class="headerlink" title="NND是真的难啊我操"></a>NND是真的难啊我操</h1><figure class="highlight c++"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br></pre></div></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdbool.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;sys/syscall.h&gt;</span></span><br><span class="hljs-comment">/*本次实验模拟实现操作系统中进程调度算法,模拟进程在不同时刻到达的情况*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> PNUM  5 <span class="hljs-comment">//进程的数量</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TIMER 10 <span class="hljs-comment">//定时器,最长CPU区间时间</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SLICE 2<span class="hljs-comment">//轮转算法的时间片</span></span><br><span class="hljs-type">int</span> timenow=<span class="hljs-number">0</span>;     <span class="hljs-comment">//当前时刻</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span>&#123;<br>   <span class="hljs-type">int</span> pid;   <span class="hljs-comment">//进程号</span><br>   <span class="hljs-type">int</span> priority;<span class="hljs-comment">//进程优先级,1~3,数字越小优先级越高</span><br>   <span class="hljs-type">int</span> arrival; <span class="hljs-comment">//到达时间</span><br>   <span class="hljs-type">int</span> burst;  <span class="hljs-comment">//CPU区间时间</span><br>   <span class="hljs-type">int</span> rest;  <span class="hljs-comment">//剩余时间</span><br>   <span class="hljs-type">char</span> state;<span class="hljs-comment">//进程状态,&#x27;N&#x27;新建,&#x27;R&#x27;运行,&#x27;W&#x27;等待CPU(就绪),&#x27;T&#x27;终止</span><br>   <span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span> *next;<br>&#125;PCB;<br><br><span class="hljs-type">int</span> gantt[TIMER*PNUM]=&#123;<span class="hljs-number">0</span>&#125;; <span class="hljs-comment">//用一个gantt数组记录调度过程,每个时刻调度的进程号 </span><br><br>PCB *job;<span class="hljs-comment">//所有作业的序列,带头节点(为简化编程)</span><br>PCB *ready=<span class="hljs-literal">NULL</span>; <span class="hljs-comment">//进程就绪队列,不带头节点</span><br>PCB *tail=<span class="hljs-literal">NULL</span>;  <span class="hljs-comment">//记录就绪队列的尾节点</span><br>PCB *run=<span class="hljs-literal">NULL</span>;<span class="hljs-comment">//正在运行中的进程,不带头结点</span><br>PCB *finish=<span class="hljs-literal">NULL</span>;<span class="hljs-comment">//已经结束的程序,不带头结点</span><br><br><span class="hljs-type">int</span> initial_arrive_time[PNUM+<span class="hljs-number">1</span>];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">InitialJob</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;   <br>   <span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br>   PCB *p,*tail;<br>   job=(PCB *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(PCB));<span class="hljs-comment">//生成头节点,其它域无意义</span><br>   job-&gt;next=<span class="hljs-literal">NULL</span>;<br>   tail=job;<br>    <br>   <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;PNUM;i++)<br>   &#123; <br>      p=(PCB *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(PCB));<span class="hljs-comment">//生成新节点(新进程)</span><br>      p-&gt;pid=i+<span class="hljs-number">1</span>;<br>      p-&gt;priority=<span class="hljs-built_in">rand</span>()%<span class="hljs-number">3</span>+<span class="hljs-number">1</span>;<span class="hljs-comment">//随机生成优先级:1~3</span><br>      p-&gt;arrival=<span class="hljs-built_in">rand</span>()%TIMER;<span class="hljs-comment">//随机生成到达时刻0-9,(预计到达就绪队列的时间) </span><br>      p-&gt;burst=<span class="hljs-built_in">rand</span>()%TIMER+<span class="hljs-number">1</span>;<span class="hljs-comment">//随机生成CPU区间时间:1~10;(估计运行时间)</span><br>      p-&gt;rest=p-&gt;burst;<br>      p-&gt;state=<span class="hljs-string">&#x27;N&#x27;</span>;<span class="hljs-comment">//初始化进程的状态为&#x27;新建&#x27;</span><br>      p-&gt;next=<span class="hljs-literal">NULL</span>; <br>      tail-&gt;next=p; <br>      tail=p;  <span class="hljs-comment">//带头结点</span><br>      initial_arrive_time[i+<span class="hljs-number">1</span>]=p-&gt;arrival;<br>   &#125;<br>&#125;<span class="hljs-comment">//生成了PNUM个PCB相连的链表</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">DisplayPCB</span><span class="hljs-params">(PCB *pcb)</span> <span class="hljs-comment">//显示队列,输入一个指向PCB的指针</span></span><br><span class="hljs-function"></span>&#123;<br>   <span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span> *p=pcb;<br>   <span class="hljs-keyword">if</span>(pcb==<span class="hljs-literal">NULL</span>) <br>   &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;XXXXXX\n&quot;</span>);<br>      <span class="hljs-keyword">return</span>;<br>   &#125;<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;进程号 优先级 到达时刻 区间时间 剩余时间 进程状态\n&quot;</span>);<br>   <span class="hljs-keyword">do</span>&#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;P%-3d\t&quot;</span>,p-&gt;pid);<span class="hljs-comment">//%-3d 输出3位整型数，不够3位左对齐</span><br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3d\t&quot;</span>,p-&gt;priority);<span class="hljs-comment">//输出3位整型数，不够3位右对齐</span><br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3d\t&quot;</span>,p-&gt;arrival);<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3d\t&quot;</span>,p-&gt;burst);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3d\t&quot;</span>,p-&gt;rest);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3c\t&quot;</span>,p-&gt;state);<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>      p=p-&gt;next;<br>   &#125;<span class="hljs-keyword">while</span>(p!=<span class="hljs-literal">NULL</span>);   <br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">DisplayGantt</span><span class="hljs-params">()</span> <span class="hljs-comment">//显示甘特数组</span></span><br><span class="hljs-function"></span>&#123;<br>   <span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br>   <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;timenow;i++)<br>   &#123;<br>      <span class="hljs-keyword">if</span>(gantt[i]==<span class="hljs-number">0</span>) <br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;空闲,&quot;</span>);<br>   <span class="hljs-keyword">else</span><br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;P%d,&quot;</span>,gantt[i]);<br>   &#125;<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/*注:关于周转时间,等待时间与响应时间的概念释疑:</span><br><span class="hljs-comment">  在课程教材&lt;操作系统概念第7版&gt;中(P141),上述三个时间是从进程到达的时间开始的.</span><br><span class="hljs-comment">  在辅助教材&lt;现代操作系统第4版&gt;中(P89),上述三个时间时从进程提交的时刻(0时刻)开始的.</span><br><span class="hljs-comment">  国内普遍接受前一种理解,本程序以课程教材中的解释为准来计算时间.</span><br><span class="hljs-comment">*/</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">DisplayTime</span><span class="hljs-params">()</span> <span class="hljs-comment">//显示周转时间t,等待时间w和响应时间r</span></span><br><span class="hljs-function"></span>&#123;<br>   <span class="hljs-type">int</span> t=<span class="hljs-number">0</span>,w=<span class="hljs-number">0</span>,r=<span class="hljs-number">0</span>;<br>   <span class="hljs-type">float</span> t_avg=<span class="hljs-number">0</span>,w_avg=<span class="hljs-number">0</span>,r_avg=<span class="hljs-number">0</span>; <br>   <span class="hljs-type">int</span> i,j;<br>   PCB *p; <span class="hljs-comment">//用p遍历finish队列,查找进程Pi的到达时间,调用该函数时所有进程都已放入finish队列</span><br>   <span class="hljs-keyword">if</span>(finish==<span class="hljs-literal">NULL</span>) <br>   &#123;<br>      <span class="hljs-keyword">return</span>;<br>   &#125;<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;进程号    周转时间    等待时间    响应时间\n&quot;</span>);<br>   <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=PNUM;i++)<br>   &#123; <br>      p=finish;<br>      <span class="hljs-keyword">while</span>(p-&gt;pid!=i) <br>         p=p-&gt;next;<br>      <span class="hljs-comment">//更改当前进程好的到达时间</span><br>      p-&gt;arrival=initial_arrive_time[i];<br>      j=<span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">while</span>(gantt[j]!=i) <br>         j++; <span class="hljs-comment">//遍历甘特数组,求进程Pi的响应时间</span><br>      r=j;  <span class="hljs-comment">//响应时刻</span><br>      t=j+<span class="hljs-number">1</span>;        <br>      <span class="hljs-keyword">for</span>(j=r+<span class="hljs-number">1</span>;j&lt;timenow;j++) <span class="hljs-comment">//继续遍历,求周转时间</span><br>      &#123;<br>         <span class="hljs-keyword">if</span>(i==gantt[j]) <br>            t=j+<span class="hljs-number">1</span>;<br>      &#125;<span class="hljs-comment">//结束时刻</span><br>      r=r-p-&gt;arrival;  <span class="hljs-comment">//响应时间=响应时刻-到达时刻</span><br>      t=t-p-&gt;arrival; <span class="hljs-comment">//周转时间=结束时刻-到达时刻</span><br>      w=t-p-&gt;burst; <span class="hljs-comment">//等待时间=周转时间-运行时间</span><br>      r_avg+=(<span class="hljs-type">float</span>)r/PNUM; <span class="hljs-comment">//平均响应时间</span><br>      w_avg+=(<span class="hljs-type">float</span>)w/PNUM;  <span class="hljs-comment">//平均等待时间</span><br>      t_avg+=(<span class="hljs-type">float</span>)t/PNUM;   <span class="hljs-comment">//平均周转时间</span><br>       <br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;P%d       %4d       %4d       %4d\n&quot;</span>,i,t,w,r);<br>   &#125;<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;平均周转时间:%.2f,平均等待时间%.2f,平均响应时间%.2f\n&quot;</span>,t_avg,w_avg,r_avg);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ReadyQueue</span><span class="hljs-params">(<span class="hljs-type">char</span> * algo,<span class="hljs-type">int</span> t)</span> <span class="hljs-comment">//根据作业队列构造就绪队列,algo:算法,t:当前时刻</span></span><br><span class="hljs-function"></span>&#123;   <br>   <span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span> *jpre,*jcur,*rpre,* rcur; <span class="hljs-comment">//job current</span><br>   <span class="hljs-type">int</span> j,r,a=<span class="hljs-number">0</span>;         <br>   <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(algo,<span class="hljs-string">&quot;FCFS&quot;</span>)==<span class="hljs-number">0</span>||<span class="hljs-built_in">strcmp</span>(algo,<span class="hljs-string">&quot;RR&quot;</span>)==<span class="hljs-number">0</span>)<span class="hljs-comment">//FCFS和RR的就绪队列的构造方式相同</span><br>      a=<span class="hljs-number">0</span>;<br>   <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(algo,<span class="hljs-string">&quot;SJF&quot;</span>)==<span class="hljs-number">0</span>)  <span class="hljs-comment">//非抢占SJF</span><br>      a=<span class="hljs-number">1</span>;<br>   <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(algo,<span class="hljs-string">&quot;SRTF&quot;</span>)==<span class="hljs-number">0</span>)  <span class="hljs-comment">//抢占式SJF,最短剩余时间优先</span><br>      a=<span class="hljs-number">2</span>;<br>   <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(algo,<span class="hljs-string">&quot;Priority&quot;</span>)==<span class="hljs-number">0</span>||<span class="hljs-built_in">strcmp</span>(algo,<span class="hljs-string">&quot;NonPriority&quot;</span>)==<span class="hljs-number">0</span>)<span class="hljs-comment">//抢占和非抢占优先级 </span><br>      a=<span class="hljs-number">3</span>;<br>   <span class="hljs-keyword">else</span> <br>   &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ReadyQueue()函数调用参数错误!\n&quot;</span>);<br>      <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>   &#125;<br>   <span class="hljs-keyword">if</span>(job-&gt;next==<span class="hljs-literal">NULL</span>) <br>   &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;作业队列为空!\n&quot;</span>);<br>      <span class="hljs-keyword">return</span>;<br>   &#125;  <br>   jpre=job;<br>   jcur=job-&gt;next;<br>   <span class="hljs-keyword">while</span>(jcur!=<span class="hljs-literal">NULL</span>) <span class="hljs-comment">//遍历作业序列中选择已到达进程,将其从作业队列移入就绪队列,直到作业队列为空   </span><br>   &#123;  <br>      <span class="hljs-keyword">if</span>(jcur-&gt;arrival&lt;=t) <span class="hljs-comment">//如果当前时刻进程已经到达,则将其插入到就绪队列的合适位置</span><br>      &#123;<br>         <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;P%d到达.\n&quot;</span>,jcur-&gt;pid);<br>      jpre-&gt;next=jcur-&gt;next;  <span class="hljs-comment">//将jcur从作业队列移除</span><br>         jcur-&gt;state=<span class="hljs-string">&#x27;W&#x27;</span>;<span class="hljs-comment">//将进程状态设置为就绪</span><br>       <span class="hljs-keyword">if</span>(ready==<span class="hljs-literal">NULL</span>) <span class="hljs-comment">//就绪队列为空</span><br>         &#123;<br>            jcur-&gt;next=<span class="hljs-literal">NULL</span>;<br>            ready=jcur;<br>            tail=ready;<br>         &#125;<br>         <span class="hljs-keyword">else</span>  <span class="hljs-comment">//就绪队列不为空,遍历就绪队列,将jcur插入到合适位置</span><br>         &#123; <br>            rpre=ready;<br>            rcur=ready;<br>            <span class="hljs-keyword">switch</span> (a)&#123; <span class="hljs-comment">//遍历就绪队列查找插入点</span><br>               <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:    <span class="hljs-comment">//FCFS,RR.根据到达时间arrival查找合适插入点</span><br>               <span class="hljs-keyword">while</span>((rcur!=<span class="hljs-literal">NULL</span>)&amp;&amp;(jcur-&gt;arrival&gt;=rcur-&gt;arrival)) <br>               &#123;<br>                  rpre=rcur;<br>                  rcur=rcur-&gt;next;<br>               &#125;<br><span class="hljs-keyword">break</span>;<br>               <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>: <span class="hljs-comment">//SJF,根据区间时间burst查找合适插入点 </span><br>               <span class="hljs-keyword">while</span>((rcur!=<span class="hljs-literal">NULL</span>)&amp;&amp;(jcur-&gt;burst&gt;=rcur-&gt;burst))<br>               &#123;<br>                  rpre=rcur;<br>                  rcur=rcur-&gt;next;<br>               &#125;<br><span class="hljs-keyword">break</span>;<br>               <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:  <span class="hljs-comment">//STRF,根据剩余时间rest查找合适插入点</span><br><span class="hljs-keyword">while</span>((rcur!=<span class="hljs-literal">NULL</span>)&amp;&amp;(jcur-&gt;rest&gt;=rcur-&gt;rest))<br>               &#123;<br>                  rpre=rcur;<br>                  rcur=rcur-&gt;next;<br>               &#125;<br><span class="hljs-keyword">break</span>;<br>               <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:  <span class="hljs-comment">//Priority, Non-Priority,根据优先级查找合适插入点</span><br><span class="hljs-keyword">while</span>((rcur!=<span class="hljs-literal">NULL</span>)&amp;&amp;(jcur-&gt;priority&gt;=rcur-&gt;priority)) <br>               &#123;<br>                  rpre=rcur;<br>                  rcur=rcur-&gt;next;<br>               &#125;        <br>               <span class="hljs-keyword">break</span>;<br>               <span class="hljs-keyword">default</span>: <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(rcur==<span class="hljs-literal">NULL</span>)<span class="hljs-comment">// 插入点在就绪队列尾部</span><br>            &#123; <br>               jcur-&gt;next=<span class="hljs-literal">NULL</span>;<br>               rpre-&gt;next=jcur;<br>               tail=jcur;<br>   &#125;<br>   <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(rcur==ready) <span class="hljs-comment">//插入点在头部</span><br>            &#123;<br>                jcur-&gt;next=rcur;<br>                ready=jcur; <br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-comment">//插入到rpre和rcur之间</span><br>            &#123;   <br>                jcur-&gt;next=rcur;<br>                rpre-&gt;next=jcur;  <br>            &#125;<br>         &#125;<br>         jcur=jpre-&gt;next;  <span class="hljs-comment">//下一个作业</span><br>      &#125;<br>      <span class="hljs-keyword">else</span>   <span class="hljs-comment">//当前作业未达到</span><br>      &#123;<br>         jpre=jcur;<br>         jcur=jcur-&gt;next;<br>      &#125; <span class="hljs-comment">//下一个作业</span><br>   &#125;<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n作业队列:\n&quot;</span>);<br>   <span class="hljs-built_in">DisplayPCB</span>(job-&gt;next); <br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">FCFS</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;  <br>   timenow=<span class="hljs-number">0</span>;<br>   <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>   &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n当前时刻:%d\n&quot;</span>,timenow);<br>      <span class="hljs-built_in">ReadyQueue</span>(<span class="hljs-string">&quot;FCFS&quot;</span>,timenow);<span class="hljs-comment">//刷新就绪队列</span><br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;就绪队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(ready);<br>      <span class="hljs-keyword">if</span>(job-&gt;next==<span class="hljs-literal">NULL</span>&amp;&amp;ready==<span class="hljs-literal">NULL</span>&amp;&amp;run==<span class="hljs-literal">NULL</span>) <br>         <span class="hljs-keyword">break</span>; <span class="hljs-comment">//没有进程,结束循环   </span><br>      <span class="hljs-keyword">if</span>(ready!=<span class="hljs-literal">NULL</span>||run!=<span class="hljs-literal">NULL</span>) <span class="hljs-comment">//有进程处于就绪或者运行状态</span><br>      &#123;<br>         <span class="hljs-keyword">if</span>(run==<span class="hljs-literal">NULL</span>)<span class="hljs-comment">//若CPU空闲</span><br>   &#123;        <br>      run=ready;      <span class="hljs-comment">//将CPU分配给ready队列的第一个进程</span><br>           ready=ready-&gt;next; <br>           run-&gt;next=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d被调度程序分派CPU!\n&quot;</span>,run-&gt;pid);        <br>         &#125;<br>        run-&gt;rest--;    <span class="hljs-comment">//修改进程PCB</span><br>        run-&gt;state=<span class="hljs-string">&#x27;R&#x27;</span>;<br>         <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d正在运行.......\n&quot;</span>,run-&gt;pid);<br>       <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;运行进程:\n&quot;</span>);<br>        <span class="hljs-built_in">DisplayPCB</span>(run);<br>         gantt[timenow]=run-&gt;pid; <span class="hljs-comment">//记录当前时刻调度进程的ID号</span><br>        <span class="hljs-keyword">if</span>(run-&gt;rest==<span class="hljs-number">0</span>)<br>        &#123;   <br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d结束!\n&quot;</span>,run-&gt;pid);<br>            run-&gt;state=<span class="hljs-string">&#x27;T&#x27;</span>;   <br>       run-&gt;next=finish;   <span class="hljs-comment">//新完成的节点插入到finish的头结点,简单一点</span><br>       finish=run;<br>       run=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;结束进程队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(finish);           <br>      &#125;           <br>      &#125;<br>      timenow++; <span class="hljs-comment">//下一时刻继续扫描作业队列  </span><br>   &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">RR</span><span class="hljs-params">(<span class="hljs-type">int</span> slice)</span>  <span class="hljs-comment">//时间片作为参数</span></span><br><span class="hljs-function"></span>&#123;<br>   timenow=<span class="hljs-number">0</span>;<br>   <span class="hljs-type">int</span> count=<span class="hljs-number">0</span>; <span class="hljs-comment">//时间片计数,count==slice表示进程已经运行一个时间片</span><br>   <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>   &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n当前时刻:%d\n&quot;</span>,timenow);<br>      <span class="hljs-built_in">ReadyQueue</span>(<span class="hljs-string">&quot;RR&quot;</span>,timenow);<span class="hljs-comment">//刷新就绪队列</span><br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;就绪队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(ready);<br>    <br>      <span class="hljs-keyword">if</span>(job-&gt;next==<span class="hljs-literal">NULL</span>&amp;&amp;ready==<span class="hljs-literal">NULL</span>&amp;&amp;run==<span class="hljs-literal">NULL</span>) <br>      &#123;<br>         <span class="hljs-keyword">break</span>;<br>      &#125; <span class="hljs-comment">//没有进程,结束循环 </span><br>      <span class="hljs-keyword">if</span>(ready==<span class="hljs-literal">NULL</span>) <br>      &#123;<br>         tail=<span class="hljs-literal">NULL</span>;<span class="hljs-comment">//???啥意思？</span><br>      &#125;<br>      <span class="hljs-keyword">if</span>(tail!=<span class="hljs-literal">NULL</span>) <br>         <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;就绪队列尾节点:P%d\n&quot;</span>,tail-&gt;pid);  <br>      <span class="hljs-keyword">if</span>(ready!=<span class="hljs-literal">NULL</span>||run!=<span class="hljs-literal">NULL</span>) <span class="hljs-comment">//有进程处于就绪或者运行状态</span><br>      &#123;<br>         <span class="hljs-comment">//这里加入RR调度的代码</span><br>         <span class="hljs-keyword">if</span>(run==<span class="hljs-literal">NULL</span>)<span class="hljs-comment">//若CPU空闲</span><br>   &#123;        <br>      run=ready;      <span class="hljs-comment">//将CPU分配给ready</span><br>            <span class="hljs-comment">//队列的第一个进程</span><br>           ready=ready-&gt;next; <br>           run-&gt;next=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d被调度程序分派CPU!\n&quot;</span>,run-&gt;pid);<br>            count=<span class="hljs-number">1</span>;        <br>         &#125;<br>         <span class="hljs-keyword">else</span><br>         &#123;<br>            ++count;<br>         &#125;<br>         run-&gt;rest--;    <span class="hljs-comment">//修改进程PCB</span><br>        run-&gt;state=<span class="hljs-string">&#x27;R&#x27;</span>;<br>         <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d正在运行.......\n&quot;</span>,run-&gt;pid);<br>       <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;运行进程:\n&quot;</span>);<br>        <span class="hljs-built_in">DisplayPCB</span>(run);<br>         gantt[timenow]=run-&gt;pid; <span class="hljs-comment">//记录当前时刻调度进程的ID号</span><br>        <span class="hljs-keyword">if</span>(run-&gt;rest==<span class="hljs-number">0</span>)<br>        &#123;   <br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d结束!\n&quot;</span>,run-&gt;pid);<br>            run-&gt;state=<span class="hljs-string">&#x27;T&#x27;</span>;   <br>       run-&gt;next=finish;   <span class="hljs-comment">//新完成的节点插入到finish的头结点,简单一点</span><br>       finish=run;<br>       run=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;结束进程队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(finish);           <br>      &#125;<br>         <span class="hljs-keyword">if</span>(count==slice&amp;&amp;run!=<span class="hljs-literal">NULL</span>)<br>         &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d被迫结束!\n&quot;</span>,run-&gt;pid);<br>            run-&gt;arrival+=slice;<br>            <span class="hljs-comment">//应该踢回到最后的就绪队伍</span><br>            <span class="hljs-keyword">if</span>(!tail)<span class="hljs-comment">//非常巧合刚好一个就绪进程都没有且下一个时刻也没有新加的</span><br>            &#123;<br>               <span class="hljs-comment">//直接加入就绪队列</span><br>               ready=run;<br>               tail=ready;<br>               run=<span class="hljs-literal">NULL</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>            tail-&gt;next=run;<br>            tail=run;<br>            run=<span class="hljs-literal">NULL</span>;<br>            &#125;<br><br>         &#125;           <br>      &#125;      <br>      timenow++; <span class="hljs-comment">//下一时刻继续扫描作业队列  </span><br>   &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SJF</span><span class="hljs-params">()</span> <span class="hljs-comment">//课后完成,构造就绪队列时按照短作业排序</span></span><br><span class="hljs-function"></span>&#123;<br>   timenow=<span class="hljs-number">0</span>;<br>   <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>   &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n当前时刻:%d\n&quot;</span>,timenow);<br>      <span class="hljs-built_in">ReadyQueue</span>(<span class="hljs-string">&quot;SJF&quot;</span>,timenow);<span class="hljs-comment">//刷新就绪队列</span><br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;就绪队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(ready);<br>      <span class="hljs-keyword">if</span>(job-&gt;next==<span class="hljs-literal">NULL</span>&amp;&amp;ready==<span class="hljs-literal">NULL</span>&amp;&amp;run==<span class="hljs-literal">NULL</span>) <br>         <span class="hljs-keyword">break</span>; <span class="hljs-comment">//没有进程,结束循环   </span><br>      <span class="hljs-keyword">if</span>(ready!=<span class="hljs-literal">NULL</span>||run!=<span class="hljs-literal">NULL</span>) <span class="hljs-comment">//有进程处于就绪或者运行状态</span><br>      &#123;<br>         <span class="hljs-keyword">if</span>(run==<span class="hljs-literal">NULL</span>)<span class="hljs-comment">//若CPU空闲</span><br>   &#123;        <br>      run=ready;      <span class="hljs-comment">//将CPU分配给ready队列的第一个进程</span><br>           ready=ready-&gt;next; <br>           run-&gt;next=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d被调度程序分派CPU!\n&quot;</span>,run-&gt;pid);        <br>         &#125;<br>        run-&gt;rest--;    <span class="hljs-comment">//修改进程PCB</span><br>        run-&gt;state=<span class="hljs-string">&#x27;R&#x27;</span>;<br>         <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d正在运行.......\n&quot;</span>,run-&gt;pid);<br>       <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;运行进程:\n&quot;</span>);<br>        <span class="hljs-built_in">DisplayPCB</span>(run);<br>         gantt[timenow]=run-&gt;pid; <span class="hljs-comment">//记录当前时刻调度进程的ID号</span><br>        <span class="hljs-keyword">if</span>(run-&gt;rest==<span class="hljs-number">0</span>)<br>        &#123;   <br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d结束!\n&quot;</span>,run-&gt;pid);<br>            run-&gt;state=<span class="hljs-string">&#x27;T&#x27;</span>;   <br>       run-&gt;next=finish;   <span class="hljs-comment">//新完成的节点插入到finish的头结点,简单一点</span><br>       finish=run;<br>       run=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;结束进程队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(finish);           <br>      &#125;           <br>      &#125;<br>      timenow++; <span class="hljs-comment">//下一时刻继续扫描作业队列  </span><br>   &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SRTF</span><span class="hljs-params">()</span> <span class="hljs-comment">//最少剩余时间优先,构造就绪队列时按照最短剩余时间作业排序</span></span><br><span class="hljs-function"></span>&#123;   <br>   timenow=<span class="hljs-number">0</span>;<br>   <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>   &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n当前时刻:%d\n&quot;</span>,timenow);<br>      <span class="hljs-built_in">ReadyQueue</span>(<span class="hljs-string">&quot;SRTF&quot;</span>,timenow);<span class="hljs-comment">//刷新就绪队列</span><br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;就绪队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(ready);<br>      <span class="hljs-keyword">if</span>(job-&gt;next==<span class="hljs-literal">NULL</span>&amp;&amp;ready==<span class="hljs-literal">NULL</span>&amp;&amp;run==<span class="hljs-literal">NULL</span>) <br>         <span class="hljs-keyword">break</span>; <span class="hljs-comment">//没有进程,结束循环   </span><br>      <span class="hljs-keyword">if</span>(ready!=<span class="hljs-literal">NULL</span>||run!=<span class="hljs-literal">NULL</span>) <span class="hljs-comment">//有进程处于就绪或者运行状态</span><br>      &#123;<br>         <span class="hljs-keyword">if</span>(run==<span class="hljs-literal">NULL</span>)<span class="hljs-comment">//若CPU空闲</span><br>   &#123;        <br>      run=ready;      <span class="hljs-comment">//将CPU分配给ready队列的第一个进程</span><br>           ready=ready-&gt;next; <br>           run-&gt;next=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d被调度程序分派CPU!\n&quot;</span>,run-&gt;pid);        <br>         &#125;<br>        run-&gt;rest--;    <span class="hljs-comment">//修改进程PCB</span><br>        run-&gt;state=<span class="hljs-string">&#x27;R&#x27;</span>;<br>         <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d正在运行.......\n&quot;</span>,run-&gt;pid);<br>       <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;运行进程:\n&quot;</span>);<br>        <span class="hljs-built_in">DisplayPCB</span>(run);<br>         gantt[timenow]=run-&gt;pid; <span class="hljs-comment">//记录当前时刻调度进程的ID号</span><br>        <span class="hljs-keyword">if</span>(run-&gt;rest==<span class="hljs-number">0</span>)<br>        &#123;   <br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d结束!\n&quot;</span>,run-&gt;pid);<br>            run-&gt;state=<span class="hljs-string">&#x27;T&#x27;</span>;   <br>       run-&gt;next=finish;   <span class="hljs-comment">//新完成的节点插入到finish的头结点,简单一点</span><br>       finish=run;<br>       run=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;结束进程队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(finish);           <br>      &#125;<br>         <span class="hljs-keyword">else</span><br>         &#123;<br>            <span class="hljs-comment">//回收当前的CPU</span><br>            run-&gt;next=ready;<br>            ready=run;<br>            run=<span class="hljs-literal">NULL</span>;<br>         &#125;           <br>      &#125;<br>      timenow++; <span class="hljs-comment">//下一时刻继续扫描作业队列  </span><br>   &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">NonPriority</span><span class="hljs-params">()</span> <span class="hljs-comment">//非抢占优先级</span></span><br><span class="hljs-function"></span>&#123;<br>   timenow=<span class="hljs-number">0</span>;<br>   <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>   &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n当前时刻:%d\n&quot;</span>,timenow);<br>      <span class="hljs-built_in">ReadyQueue</span>(<span class="hljs-string">&quot;NonPriority&quot;</span>,timenow);<span class="hljs-comment">//刷新就绪队列</span><br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;就绪队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(ready);<br>      <span class="hljs-keyword">if</span>(job-&gt;next==<span class="hljs-literal">NULL</span>&amp;&amp;ready==<span class="hljs-literal">NULL</span>&amp;&amp;run==<span class="hljs-literal">NULL</span>) <br>         <span class="hljs-keyword">break</span>; <span class="hljs-comment">//没有进程,结束循环   </span><br>      <span class="hljs-keyword">if</span>(ready!=<span class="hljs-literal">NULL</span>||run!=<span class="hljs-literal">NULL</span>) <span class="hljs-comment">//有进程处于就绪或者运行状态</span><br>      &#123;<br>         <span class="hljs-keyword">if</span>(run==<span class="hljs-literal">NULL</span>)<span class="hljs-comment">//若CPU空闲</span><br>   &#123;        <br>      run=ready;      <span class="hljs-comment">//将CPU分配给ready队列的第一个进程</span><br>           ready=ready-&gt;next; <br>           run-&gt;next=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d被调度程序分派CPU!\n&quot;</span>,run-&gt;pid);        <br>         &#125;<br>        run-&gt;rest--;    <span class="hljs-comment">//修改进程PCB</span><br>        run-&gt;state=<span class="hljs-string">&#x27;R&#x27;</span>;<br>         <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d正在运行.......\n&quot;</span>,run-&gt;pid);<br>       <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;运行进程:\n&quot;</span>);<br>        <span class="hljs-built_in">DisplayPCB</span>(run);<br>         gantt[timenow]=run-&gt;pid; <span class="hljs-comment">//记录当前时刻调度进程的ID号</span><br>        <span class="hljs-keyword">if</span>(run-&gt;rest==<span class="hljs-number">0</span>)<br>        &#123;   <br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d结束!\n&quot;</span>,run-&gt;pid);<br>            run-&gt;state=<span class="hljs-string">&#x27;T&#x27;</span>;   <br>       run-&gt;next=finish;   <span class="hljs-comment">//新完成的节点插入到finish的头结点,简单一点</span><br>       finish=run;<br>       run=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;结束进程队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(finish);           <br>      &#125;           <br>      &#125;<br>      timenow++; <span class="hljs-comment">//下一时刻继续扫描作业队列  </span><br>   &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Priority</span><span class="hljs-params">()</span><span class="hljs-comment">//抢占式优先级</span></span><br><span class="hljs-function"></span>&#123;<br>   timenow=<span class="hljs-number">0</span>;<br>   <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>   &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n当前时刻:%d\n&quot;</span>,timenow);<br>      <span class="hljs-built_in">ReadyQueue</span>(<span class="hljs-string">&quot;Priority&quot;</span>,timenow);<span class="hljs-comment">//刷新就绪队列</span><br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;就绪队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(ready);<br>      <span class="hljs-keyword">if</span>(job-&gt;next==<span class="hljs-literal">NULL</span>&amp;&amp;ready==<span class="hljs-literal">NULL</span>&amp;&amp;run==<span class="hljs-literal">NULL</span>) <br>         <span class="hljs-keyword">break</span>; <span class="hljs-comment">//没有进程,结束循环   </span><br>      <span class="hljs-keyword">if</span>(ready!=<span class="hljs-literal">NULL</span>||run!=<span class="hljs-literal">NULL</span>) <span class="hljs-comment">//有进程处于就绪或者运行状态</span><br>      &#123;<br>         <span class="hljs-keyword">if</span>(run==<span class="hljs-literal">NULL</span>)<span class="hljs-comment">//若CPU空闲</span><br>   &#123;        <br>      run=ready;      <span class="hljs-comment">//将CPU分配给ready队列的第一个进程</span><br>           ready=ready-&gt;next; <br>           run-&gt;next=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d被调度程序分派CPU!\n&quot;</span>,run-&gt;pid);        <br>         &#125;<br>        run-&gt;rest--;    <span class="hljs-comment">//修改进程PCB</span><br>        run-&gt;state=<span class="hljs-string">&#x27;R&#x27;</span>;<br>         <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d正在运行.......\n&quot;</span>,run-&gt;pid);<br>       <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;运行进程:\n&quot;</span>);<br>        <span class="hljs-built_in">DisplayPCB</span>(run);<br>         gantt[timenow]=run-&gt;pid; <span class="hljs-comment">//记录当前时刻调度进程的ID号</span><br>        <span class="hljs-keyword">if</span>(run-&gt;rest==<span class="hljs-number">0</span>)<br>        &#123;   <br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nP%d结束!\n&quot;</span>,run-&gt;pid);<br>            run-&gt;state=<span class="hljs-string">&#x27;T&#x27;</span>;   <br>       run-&gt;next=finish;   <span class="hljs-comment">//新完成的节点插入到finish的头结点,简单一点</span><br>       finish=run;<br>       run=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;结束进程队列:\n&quot;</span>);<br>      <span class="hljs-built_in">DisplayPCB</span>(finish);           <br>      &#125;<br>         <span class="hljs-keyword">else</span><br>         &#123;<br>            <span class="hljs-comment">//回收当前的CPU</span><br>            run-&gt;next=ready;<br>            ready=run;<br>            run=<span class="hljs-literal">NULL</span>;<br>         &#125;           <br>      &#125;<br>      timenow++; <span class="hljs-comment">//下一时刻继续扫描作业队列  </span><br>   &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;    <br>   <span class="hljs-comment">//srand((int)time(NULL)); //随机数种子</span><br>   <span class="hljs-built_in">srand</span>(<span class="hljs-number">10</span>); <br>   <span class="hljs-built_in">InitialJob</span>();<br>   <span class="hljs-built_in">DisplayPCB</span>(job-&gt;next);<br>   <span class="hljs-built_in">RR</span>(SLICE);<br>   <span class="hljs-comment">//FCFS();</span><br>   <span class="hljs-comment">//SJF();</span><br>   <span class="hljs-comment">//SRTF();</span><br>   <span class="hljs-comment">//NonPriority();</span><br>   <span class="hljs-comment">//Priority();      </span><br>   <span class="hljs-built_in">DisplayGantt</span>();<br><br>   <span class="hljs-built_in">DisplayTime</span>();<br>   <span class="hljs-keyword">return</span> EXIT_SUCCESS;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Django的路由配置问题</title>
    <link href="/2022/04/03/Django%E7%9A%84%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/"/>
    <url>/2022/04/03/Django%E7%9A%84%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="首先是报错问题"><a href="#首先是报错问题" class="headerlink" title="首先是报错问题"></a>首先是报错问题</h2><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://192.168.181.129:5000/statics/image/image2.jpg&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;200px&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;200px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/statics/image/image2.jpg&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;200px&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;200px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;image/image2.jpg&#x27;%&#125;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>尤其注意第一个里面的端口，第一次配置是一定要看是不是8000<br>然后推荐使用Django自带的static，能够直接匹配到STATICFILES_DIR，这样能够实现动态修改<br>具体方法如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% load static%&#125; <br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;image/image2.jpg&#x27;%&#125;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="分布式路由问题"><a href="#分布式路由问题" class="headerlink" title="分布式路由问题"></a>分布式路由问题</h2><p>很明显在python3 manage.py startapp music后<br>要新建urls.py，而新申请的应用发送请求是往新的app里面发的</p><h3 id="在主路由里面调用新的include函数"><a href="#在主路由里面调用新的include函数" class="headerlink" title="在主路由里面调用新的include函数"></a>在主路由里面调用新的include函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">include(<span class="hljs-string">&#x27;app名字.url模块名&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="为了避免多重识别的问题-即在不同应用里面建一样名字的html文件"><a href="#为了避免多重识别的问题-即在不同应用里面建一样名字的html文件" class="headerlink" title="为了避免多重识别的问题(即在不同应用里面建一样名字的html文件)"></a>为了避免多重识别的问题(即在不同应用里面建一样名字的html文件)</h3><p>得在每个templates文件夹里再新建一个文件夹，如music，然后在请求时在views.py文件里前面加上music&#x2F;</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>关于三月的总结和对四月的规划</title>
    <link href="/2022/04/01/%E5%85%B3%E4%BA%8E%E4%B8%89%E6%9C%88%E7%9A%84%E6%80%BB%E7%BB%93%E5%92%8C%E5%AF%B9%E5%9B%9B%E6%9C%88%E7%9A%84%E8%A7%84%E5%88%92/"/>
    <url>/2022/04/01/%E5%85%B3%E4%BA%8E%E4%B8%89%E6%9C%88%E7%9A%84%E6%80%BB%E7%BB%93%E5%92%8C%E5%AF%B9%E5%9B%9B%E6%9C%88%E7%9A%84%E8%A7%84%E5%88%92/</url>
    
    <content type="html"><![CDATA[<h2 id="三月总结"><a href="#三月总结" class="headerlink" title="三月总结"></a>三月总结</h2><p>单词目前已经背到了第十单元了<br>Django学完了前两二章节的(太慢了！！)<br>目前高数学完(如果是考数二的话我感觉差不多了)<br>英语目前还是得开始做题呢<br>操作系统学完了前两章<br>计组学完了前两章<br>编译原理没咋学(好怕会挂科呀！)</p><h2 id="四月展望"><a href="#四月展望" class="headerlink" title="四月展望"></a>四月展望</h2><h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><p>1.我的计划是4月份里起码得完成4套真题，即一个星期一套<br>2.然后单词嘛仍然按照那个曲线来，计划每天一单元，然后复习之前的单元，每天早上必须弄好，别有拖延症</p><h3 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h3><p>1.清明节开始线性代数<br>2.四月份结束后必须把660的高数加线代部分做完<br>3.线代计划在三周内学完(说不定可以更快)<br>4.可以先做3套之前的真题练练手</p><h3 id="计组"><a href="#计组" class="headerlink" title="计组"></a>计组</h3><p>1.没得说的，必须得学完<br>2.总共七章，还剩下5章，那么就是前两周做完前三章，后两周做完后两章<br>3.适当学点汇编帮忙</p><h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><p>1.不用多说，跟着老师进行，顺便和计组一起进行</p><h3 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h3><p>1.接下来开发任务会变重，按照一天三个视频的进度来，细细安排</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>这是在商大构建的第一个博客呢</title>
    <link href="/2022/04/01/%E8%BF%99%E6%98%AF%E5%9C%A8%E5%95%86%E5%A4%A7%E6%9E%84%E5%BB%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E5%91%A2/"/>
    <url>/2022/04/01/%E8%BF%99%E6%98%AF%E5%9C%A8%E5%95%86%E5%A4%A7%E6%9E%84%E5%BB%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E5%91%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="在商大最后一年留下的足迹"><a href="#在商大最后一年留下的足迹" class="headerlink" title="在商大最后一年留下的足迹"></a>在商大最后一年留下的足迹</h2>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
